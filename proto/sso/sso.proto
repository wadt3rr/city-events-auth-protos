// Версия ProtoBuf
syntax = "proto3";

// Текущий пакет - указывает пространство имен для сервиса и сообщений. Помогает избегать конфликтов имен.
package auth;

// Настройки для генерации Go кода.
option go_package = "wadt3rr.sso.v1;ssov1";

// Auth is service for managing permissions and roles.
service Auth {
	// Register registers a new user.
	rpc Register (RegisterRequest) returns (RegisterResponse);
	// Login logs in a user and returns an auth token.
	rpc Login (LoginRequest) returns (LoginResponse);
  // AssignRole assigns role to user
  rpc AssignRole (AssignRoleRequest) returns (AssignRoleResponse);
  // GetUserRole get user current role
  rpc GetUserRole (GetUserRoleRequest) returns (GetUserRoleResponse);
  // ListUsers get list of users with their roles
  rpc ListUsers (ListUsersRequest) returns (ListUsersResponse);

}


// AUTH
// Объект, который отправляется при вызове RPC-метода (ручки) Register.
message RegisterRequest {
	string email = 1; // Email of the user to register.
	string password = 2; // Password of the user to register.
  string role = 3;
}

// Объект, который метод (ручка) вернёт.
message RegisterResponse {
	int64 user_id = 1; // User ID of the registered user.
}

// То же самое для метода Login()
message LoginRequest {
	string email = 1; // Email of the user to login.
	string password = 2; // Password of the user to login.
	int32 app_id = 3; // ID of the app to login to.
}

message LoginResponse {
	string token = 1; // Auth token of the logged in user.
}


// ROLE MANAGEMENT

message AssignRoleRequest {
  int64 user_id = 1;
  string role = 2;
}

message AssignRoleResponse {
  bool success = 1;
}

message GetUserRoleRequest {
  int64 user_id = 1;
}

message GetUserRoleResponse {
  string role = 1;
}

// USER LIST

message ListUsersRequest  {
}

message ListUsersResponse {
  repeated User users = 1;
}

message User {
  int64 id = 1;
  string email = 2;
  string role = 3;
}


